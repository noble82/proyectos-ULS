<?php
// +-------------------------------------------------+
// © 2002-2004 PMB Services / www.sigb.net pmb@sigb.net et contributeurs (voir www.sigb.net)
// +-------------------------------------------------+
// $Id: newrecords_flux.class.php,v 1.2 2015-04-18 13:01:51 dgoron Exp $

if (stristr($_SERVER['REQUEST_URI'], ".class.php")) die("no access");

require_once("$class_path/filter_results.class.php");
require_once("$class_path/notice_affichage.class.php");

// definition de la classe de gestion des 'flux RSS'
class newrecords_flux {

// ---------------------------------------------------------------
//		proprietes de la classe
// ---------------------------------------------------------------
	
	protected $notices_list = array();
	protected $title = "";
	protected $link = "";
	protected $description = "";
	protected $copyright = "";
	protected $language = "";
	protected $managingEditor = "";
	protected $webMaster = "";
	protected $imageUrl = "";
	protected $imageTitle = "";
	protected $imageLink = "";
	public $envoi = "";
	
	// ---------------------------------------------------------------
	//		constructeur
	// ---------------------------------------------------------------
	function __construct($flag_all=true) {	
		global $msg;	
		if($flag_all)$this->getRecords();	
		$this->title=$msg["newrecord_rss_flux_name"];
	}
		
	public function getRecords() {
		global $dbh;
		$this->notices_list=array();
		$req = "SELECT notice_id FROM  notices	WHERE notice_is_new=1 ORDER by notice_date_is_new";
		$res = pmb_mysql_query($req,$dbh);
		if (pmb_mysql_num_rows($res)) {
			while($r=pmb_mysql_fetch_object($res)){
				$this->notices_list[]= $r->notice_id;
			}
		}
		if(!count($this->notices_list)) return array();
		$filter=new filter_results($this->notices_list);
		$this->notices_list=$filter->get_array_results();
		return $this->notices_list;
	}
	
	public function setRecords($notices_list) {
		global $dbh;
		$this->notices_list=array();
		if(!count($notices_list)) return array();
		$req = "SELECT notice_id FROM  notices	WHERE notice_is_new=1 and notice_id in (".implode(",", $notices_list).") ORDER by notice_date_is_new";
		$res = pmb_mysql_query($req,$dbh);
		if (pmb_mysql_num_rows($res)) {
			while($r=pmb_mysql_fetch_object($res)){
				$this->notices_list[]= $r->notice_id;
			}
		}
		if(!count($this->notices_list)) return array();
		$filter=new filter_results($this->notices_list);
		$this->notices_list=$filter->get_array_results();
		return $this->notices_list;
	}
	
	public function setTitle($title) {
		$this->title=$title;
	}
	
	public function setDescription($description) {
		$this->description=$description;
	}
	
	public function setCopyright($copyright) {
		$this->copyright=$copyright;
	}
	
	public function setLanguage($language) {
		$this->language=$language;
	}
	
	public function setManagingEditor($managingEditor) {
		$this->managingEditor=$managingEditor;
	}
	
	public function setWebMaster($webMaster) {
		$this->webMaster=$webMaster;
	}
	
	public function setLink($link) {
		$this->link=$link;
	}
	
	public function setImageUrl($url) {
		$this->imageUrl=$url;
	}
	
	public function setImageTitle($title) {
		$this->imageTitle=$title;
	}
	
	public function setImageLink($link) {
		$this->imageLink=$link;
	}
	
	// ---------------------------------------------------------------
	//		generation du fichier XML
	// ---------------------------------------------------------------
	public function xmlfile() {		
		global $pmb_bdd_version, $charset, $msg;
		if (!$charset) $charset='ISO-8859-1';
		
		$this->envoi="<?xml version=\"1.0\" encoding=\"".$charset."\"?>
		<!-- RSS generated by PMB on ".addslashes(date("D, d/m/Y H:i:s"))." -->
		<rss version=\"2.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">
			<channel>
				<title>".htmlspecialchars ($this->title,ENT_QUOTES, $charset)."</title>
				<link>".htmlspecialchars ($this->link,ENT_QUOTES, $charset)."</link>
				<description>".htmlspecialchars ($this->description,ENT_QUOTES, $charset)."</description>
				<language>".htmlspecialchars ($this->language,ENT_QUOTES, $charset)."</language>
				<copyright>".htmlspecialchars ($this->copyright,ENT_QUOTES, $charset)."</copyright>
				<lastBuildDate>".addslashes(date("D, d M Y H:i:s O"))."</lastBuildDate>
				<docs>http://backend.userland.com/rss</docs>
				<generator>PMB Version ".$pmb_bdd_version."</generator>
				<managingEditor>".htmlspecialchars ($this->managingEditor,ENT_QUOTES, $charset)."</managingEditor>
				<webMaster>".htmlspecialchars ($this->webMaster,ENT_QUOTES, $charset)."</webMaster>
				<ttl>".$this->ttl_rss_flux."</ttl>";
		if ($this->img_url_rss_flux) {
			$this->envoi.="
				<image>
					<url>".htmlspecialchars ($this->imageUrl,ENT_QUOTES, $charset)."</url>
					<title>".htmlspecialchars ($this->imageTitle,ENT_QUOTES, $charset)."</title>
					<link>".htmlspecialchars ($this->imageLink,ENT_QUOTES, $charset)."</link>
				</image>" ;
		}
		
		$this->envoi.=$this->aff_notices_list($this->notices_list)."
				</channel>
			</rss>
		";
		
		if($charset=='utf-8') {
			$this->envoi = preg_replace('/[\x00-\x08\x10\x0B\x0C\x0E-\x19\x7F]'.
					'|[\x00-\x7F][\x80-\xBF]+'.
					'|([\xC0\xC1]|[\xF0-\xFF])[\x80-\xBF]*'.
					'|[\xC2-\xDF]((?![\x80-\xBF])|[\x80-\xBF]{2,})'.
					'|[\xE0-\xEF](([\x80-\xBF](?![\x80-\xBF]))|(?![\x80-\xBF]{2})|[\x80-\xBF]{3,})/S',
					'', $this->envoi );
		} else {
			$this->envoi = preg_replace('/[\x00-\x08\x10\x0B\x0C\x0E-\x19\x7F]/S',
					'', $this->envoi );
		}
		return $this->envoi;
	}

	private function aff_notices_list($notices_list){
		global $dbh,$charset,$opac_url_base ;
		global $opac_notice_affichage_class;
		
		$retour_aff="";	
		foreach($notices_list as $notice_id){
			
			$req = "select notice_id, notice_date_is_new from notices where notice_id=$notice_id";
			$res = @pmb_mysql_query($req,$dbh);
			if($r=pmb_mysql_fetch_object($res)){
				
				if($opac_notice_affichage_class != ""){
					$notice = new $opac_notice_affichage_class($r->notice_id, "", "", 1);
				}else $notice = new notice_affichage($r->notice_id, "", "", 1);
				$notice->visu_expl = 0 ;
				$notice->visu_explnum = 0 ;
				$notice->do_header_without_html();
				
				$retour_aff .= "<item>
					<title>".htmlspecialchars ($notice->notice_header_without_html,ENT_QUOTES, $charset)."</title>
					<pubDate>".htmlspecialchars ($r->notice_date_is_new,ENT_QUOTES, $charset)."</pubDate>
					<link>".htmlspecialchars ($opac_url_base."index.php?lvl=notice_display&id=".$r->notice_id,ENT_QUOTES, $charset)."</link>" ;
				
				$notice->do_isbd(1,0);
				$desc=$notice->notice_isbd;				
				$retour_aff .= "	<description>".htmlspecialchars($desc,ENT_QUOTES, $charset)."</description>";
				$retour_aff .= "</item>" ;
			}				
		}		
		return $retour_aff;
	}

} # fin de definition
